# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-27 10:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('planner', '0004_auto_20171024_0206'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('self_id', models.IntegerField(default=0)),
                ('pid', models.IntegerField(default=0)),
                ('parent_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='planner.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('P1', 'Priority1'), ('P2', 'Priority2'), ('P3', 'Priority3')], default='P1', max_length=10)),
                ('sim_req', models.CharField(max_length=128, verbose_name='Simulation Requirements')),
                ('seq_req', models.CharField(max_length=128, verbose_name='Sequence Requirements')),
                ('check_desp', models.CharField(max_length=128, verbose_name='Checking Description')),
                ('func_cov_req', models.CharField(max_length=128, verbose_name='Func Cov Requirements')),
                ('measure_src', models.TextField(verbose_name='Measure Source')),
                ('test_cov', models.IntegerField(default=0, verbose_name='Testcase Coverage')),
                ('line_cov', models.IntegerField(default=0, verbose_name='Line Coverage')),
                ('con_cov', models.IntegerField(default=0, verbose_name='Conditional Coverage')),
                ('toggle_cov', models.IntegerField(default=0, verbose_name='Toggle Coverage')),
                ('fsm_cov', models.IntegerField(default=0, verbose_name='FSM Coverage')),
                ('branch_cov', models.IntegerField(default=0, verbose_name='Branch Coverage')),
                ('assert_cov', models.IntegerField(default=0, verbose_name='Assertion Coverage')),
                ('func_cov', models.IntegerField(default=0, verbose_name='Functional Coverage')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.Feature')),
            ],
        ),
        migrations.CreateModel(
            name='OperationLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=128, verbose_name='change by whom')),
                ('content', models.TextField(verbose_name='change content')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('feature_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.FeatureItem')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('views', models.IntegerField(default=0)),
                ('slug', models.SlugField()),
                ('pid', models.IntegerField(default=0, editable=False)),
            ],
        ),
        migrations.AddField(
            model_name='feature',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.Project'),
        ),
    ]
